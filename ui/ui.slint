import { Button, HorizontalBox, LineEdit, StandardButton, StandardListView, VerticalBox } from "std-widgets.slint";

export component App inherits Window {
    preferred-height: 300px;
    preferred-width: 600px;
    default-font-size: 14px;
    title: "undertasker";
    icon: @image-url("../assets/window.png");

    property<color> enabled: #4B4A8B;
    property<color> disabled: #515151;

    in-out property<int> index: -1;
    in-out property<[StandardListViewItem]> list;
    in-out property<string> path;
    in-out property<length> scroll: 0;
    in-out property<bool> is_not_empty: false;

    callback add(string);
    callback remove();
    callback browse();
    callback save();
    callback run();
    callback show_success;
    callback show_error;

    show_success => { success_popup.show(); }
    show_error => { error_popup.show(); }

    success_popup := PopupWindow {
        height: 100px;
        width: 350px;
        padding: 10px;

        x: ((600px / 1px - 350) / 2) * 1px;
        y: ((350px / 1px - 150) / 2) * 1px;

        Rectangle {
            background: root.background;
            border-color: enabled;
            border-width: 1px;
        }

        success_dialog := Dialog {
            height: 100%;
            width: 100%;

            success_dialog_text := Text {
                text: "The operation was a success.";
                wrap: word-wrap;
            }

            StandardButton { kind: ok; }
        }
    }

    error_popup := PopupWindow {
        height: 100px;
        width: 350px;
        padding: 10px;

        x: ((600px / 1px - 350) / 2) * 1px;
        y: ((350px / 1px - 150) / 2) * 1px;

        Rectangle {
            background: root.background;
            border-color: enabled;
            border-width: 1px;
        }

        error_dialog := Dialog {
            height: 100%;
            width: 100%;

            error_dialog_text := Text {
                text: "An error occurred.";
                wrap: word-wrap;
            }

            StandardButton { kind: ok; }
        }
    }

    VerticalBox {
        HorizontalBox {
            text-edit := LineEdit {
                placeholder-text: "";
                text <=> path;
            }

            Rectangle {
                background: text-edit.text != "" ? enabled : disabled;

                Button {
                    width: 100%;
                    height: 100%;
                    text: "Add";
                    enabled: text-edit.text != "";
                    clicked => { add(text-edit.text); }
                }
            }
        }

        HorizontalBox {
            Rectangle {
                border-width: 1px;
                border-color: #808080;

                command := StandardListView {
                    width: parent.width;
                    height: parent.height;
                    model: list;
                    current-item <=> index;
                    viewport-y <=> scroll;
                }
            }
        }

        HorizontalBox {
            Rectangle {
                background: enabled;

                Button {
                    width: 100%;
                    height: 100%;
                    text: "Browse";
                    clicked => { browse(); }
                }
            }

            Rectangle {
                background: (command.current-item >= 0 && is_not_empty) ? enabled : disabled;

                Button {
                    width: 100%;
                    height: 100%;
                    text: "Remove";
                    enabled: command.current-item >= 0 && is_not_empty;
                    clicked => { remove(); }
                }
            }

            Rectangle {
                background: enabled;

                Button {
                    width: 100%;
                    height: 100%;
                    text: "Save";
                    clicked => { save(); }
                }
            }

            Rectangle {
                background: is_not_empty ? enabled : disabled;

                Button {
                    width: 100%;
                    height: 100%;
                    text: "Run";
                    enabled: is_not_empty;
                    clicked => { run(); }
                }
            }
        }
    }
}
